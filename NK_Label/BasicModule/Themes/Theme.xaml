<!-- Basic Module -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Color x:Key="MainTop">#0A4268</Color>
    <Color x:Key="MainBackground">#EFEFEF</Color>

    <Color x:Key="LabelBorder">#A5A5A6</Color>
    <Color x:Key="LabelActive">#DCDCDD</Color>
    <Color x:Key="LabelInactive">#C5C5C6</Color>

    <Color x:Key="Button">#043350</Color>
    <Color x:Key="ButtonOver">#074F78</Color>
    <Color x:Key="ButtonPressed">#031C2b</Color>
    <Color x:Key="ButtonDisabled">#4D4D4D</Color>

    <Color x:Key="ToggleIcon">#E5E5E5</Color>
    <Color x:Key="ToggleOffBack">#A5A5A6</Color>
    <Color x:Key="ToggleDisabledOnBack">#244152</Color>

    <Color x:Key="TextBoxBorder">#074F78</Color>
    <Color x:Key="TextBoxBorderFocused">#333333</Color>


    <SolidColorBrush x:Key="MainTopBrush" Color="{StaticResource MainTop}" />
    <SolidColorBrush x:Key="MainBackgroundBrush" Color="{StaticResource MainBackground}" />

    <SolidColorBrush x:Key="LabelBorderBrush" Color="{StaticResource LabelBorder}" />
    <SolidColorBrush x:Key="LabelActiveBrush" Color="{StaticResource LabelActive}" />
    <SolidColorBrush x:Key="LabelInactiveBrush" Color="{StaticResource LabelInactive}" />

    <SolidColorBrush x:Key="ButtonBrush" Color="{StaticResource Button}" />
    <SolidColorBrush x:Key="ButtonOverBrush" Color="{StaticResource ButtonOver}" />
    <SolidColorBrush x:Key="ButtonPressedBrush" Color="{StaticResource ButtonPressed}" />
    <SolidColorBrush x:Key="ButtonDisabledBrush" Color="{StaticResource ButtonDisabled}" />

    <SolidColorBrush x:Key="ToggleIconBrush" Color="{StaticResource ToggleIcon}" />
    <SolidColorBrush x:Key="ToggleOffBackBrush" Color="{StaticResource ToggleOffBack}" />
    <SolidColorBrush x:Key="ToggleOnBackBrush" Color="{StaticResource Button}" />
    <SolidColorBrush x:Key="ToggleDisabledOnBackBrush" Color="{StaticResource ButtonDisabled}" />

    <SolidColorBrush x:Key="TextBoxBorderBrush" Color="{StaticResource TextBoxBorder}" />
    <SolidColorBrush x:Key="TextBoxBorderFocusedBrush" Color="{StaticResource TextBoxBorderFocused}" />

    <!--#region Main Window-->
    <Color x:Key="MenuBar">#DCDCDD</Color>
    <SolidColorBrush x:Key="MenuBarBrush" Color="{StaticResource MenuBar}" />
    <Style  x:Key="MainTopMenu"
            TargetType="{x:Type Menu}">
        <Setter Property="Height" Value="30"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="20,5,20,0"/>
        <Setter Property="Background" Value="{StaticResource MenuBarBrush}"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    <Style  x:Key="MainTopMenuHeader"
            TargetType="{x:Type MenuItem}">
        <Setter Property="Margin" Value="0,0,10,0"/>
    </Style>


    <Style x:Key="MainLeftStackPanel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="10,8"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <Style x:Key="MainButtonImage"
        TargetType="{x:Type Image}">
        <Setter Property="Opacity" Value="0.8"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Color x:Key="ImageButton">#093450</Color>
    <SolidColorBrush x:Key="ImageButtonBrush" Color="{StaticResource ImageButton}" />
    <Style x:Key="MainButtonText"
           TargetType="{x:Type TextBlock}" >
        <Setter Property="Width" Value="70"/>
        <Setter Property="FontFamily" Value="Malgun Gothic"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{StaticResource ImageButtonBrush}" />
        <Setter Property="TextAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="True">
                <Setter Property="Opacity" Value="1.2"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Color x:Key="MainButtonOver">#FFFFFF</Color>
    <Color x:Key="MainButtonPressed">#BDBDBD</Color>
    <SolidColorBrush x:Key="MainButtonOverBrush" Color="{StaticResource MainButtonOver}" />
    <SolidColorBrush x:Key="MainButtonPressedBrush" Color="{StaticResource MainButtonPressed}" />
    <Style x:Key="MainButton"
           TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{StaticResource MainBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource MainBackgroundBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <ControlTemplate x:Key="MainButtonTemplate"
                     TargetType="{x:Type Button}" >
        <Border 
            x:Name="Border"  
            CornerRadius="5" 
            BorderThickness="0"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter
                Margin="5,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource MainButtonPressedBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="LabelGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="Margin" Value="0,10,4,10"/>
    </Style>

    <Style x:Key="LabelTabControl"
           TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="{StaticResource LabelActiveBrush}"/>
        <Setter Property="Margin" Value="5,3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource LabelBorderBrush}"/>
        <Setter Property="FontSize" Value="13" />
    </Style>

    <ControlTemplate x:Key="LabelTabItemTemplate"
                     TargetType="{x:Type TabItem}">
        <Border x:Name="Border"
                Margin="-2,0,4,0"
                VerticalAlignment="Bottom"
                BorderThickness="1,1,1,0"
                BorderBrush="{StaticResource LabelBorderBrush}"
                CornerRadius="0,0,0,0">
            <ContentPresenter
                x:Name="ContentSite"
                ContentSource="Header"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Margin="13,2">
            </ContentPresenter>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LabelActiveBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LabelInactiveBrush}" />
                <Setter TargetName="ContentSite" Property="Margin" Value="13,1" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource LabelActiveBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="MainGridSplitter"
           TargetType="{x:Type GridSplitter}">
        <Setter Property="Width" Value="3"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Background" Value="{StaticResource LabelActiveBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="MainRightGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="4,10,10,10"/>
    </Style>
    <Style x:Key="MainRightHeader"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Height" Value="27"/>
        <Setter Property="Padding" Value="20,3"/>
        <Setter Property="Background" Value="{StaticResource MainTopBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="MainRightBorder"
           TargetType="{x:Type Border}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{StaticResource LabelActiveBrush}"/>
    </Style>
    <Style x:Key="MainRightScrollViewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="MinWidth" Value="300"/>
        <Setter Property="MaxWidth" Value="550"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style x:Key="MainBottomStackPanel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="Margin" Value="0,1,20,12"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>
    <Style x:Key="MainBottomHeader"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Margin" Value="25,0,0,0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>
    <Style x:Key="MainBottomValue"
           TargetType="{x:Type TextBlock}">
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
        <Setter Property="TextAlignment" Value="Left"/>
    </Style>
    <!--#endregion-->

    <!--#region Common Button-->
    <Style  x:Key="ButtonCommon"
            TargetType="{x:Type Button}" >
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Margin" Value="5,10"/>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    <ControlTemplate x:Key="ButtonCommonTemplate"
                     TargetType="{x:Type Button}" >
        <Border 
            x:Name="Border"  
            CornerRadius="3" 
            BorderThickness="0"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter
                Margin="15,5,15,5"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonOverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDisabledBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region CheckBox Toggle Button-->
    <Style x:Key="CheckRadioFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderCheckBox"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardIsChecked">
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetName="CheckFlag"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="14"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsCheckedOff">
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetName="CheckFlag"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="True">
                        <BulletDecorator.Bullet>
                            <Border x:Name="ForegroundPanel"
                                    Width="35" Height="20" BorderThickness="1" CornerRadius="10">
                                <Canvas>
                                    <Border x:Name="CheckFlag"
                                            Background="{StaticResource ToggleIconBrush}" 
                                            Width="19" Height="18"
                                            VerticalAlignment="Center" 
                                            BorderThickness="1" CornerRadius="10"
                                            RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="180" />
                                        </Border.Effect>
                                    </Border>
                                </Canvas>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{StaticResource ToggleOnBackBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{StaticResource ToggleOffBackBrush}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsEnabled" Value="False"/>
                                <Condition Property="IsChecked" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter TargetName="ForegroundPanel" Property="Background" Value="{StaticResource ToggleDisabledOnBackBrush}" />
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderCheckBoxWithText"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="OnChecking">
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetName="slider"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                BeginTime="00:00:00">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="31"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="OnUnchecking">
                            <DoubleAnimationUsingKeyFrames
                                Storyboard.TargetName="slider"
                                Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                BeginTime="00:00:00">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames
                                Storyboard.TargetName="slider" 
                                Storyboard.TargetProperty="(FrameworkElement.Margin)"
                                BeginTime="00:00:00">
                                <SplineThicknessKeyFrame KeyTime="00:00:00.1000000" Value="1,1,1,1"/>
                            </ThicknessAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <DockPanel x:Name="dockPanel">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" VerticalAlignment="Center"/>
                        <Grid Width="65" Margin="5,5,0,5" Background="Transparent">
                            <TextBlock Text="OFF"
                                       Margin="0,0,6,0"
                                       HorizontalAlignment="Right"
                                       Foreground="Gray"
                                       TextWrapping="Wrap" FontWeight="Bold" FontSize="12" />
                            <TextBlock Text="ON"
                                       Margin="6,0,0,0"
                                       HorizontalAlignment="Left"
                                       Foreground="#9E0000"
                                       TextWrapping="Wrap" FontSize="12" FontWeight="Bold" />
                            <Border x:Name="slider" 
                                    HorizontalAlignment="Left"
                                    Width="33"
                                    Margin="0"
                                    BorderThickness="1" CornerRadius="3"
                                    RenderTransformOrigin="0.5,0.5">
                                <Border.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                                        <SkewTransform AngleX="0" AngleY="0"/>
                                        <RotateTransform Angle="0"/>
                                        <TranslateTransform X="0" Y="0"/>
                                    </TransformGroup>
                                </Border.RenderTransform>
                                <Border.BorderBrush>
                                    <LinearGradientBrush EndPoint="0.5,0.1" StartPoint="0.5,0.1">
                                        <GradientStop Color="{StaticResource Button}" Offset="1"/>
                                        <GradientStop Color="{StaticResource ButtonOver}" Offset="0"/>
                                    </LinearGradientBrush>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,0.5" StartPoint="0.5,0.1">
                                        <GradientStop Color="{StaticResource ButtonOver}" Offset="0"/>
                                        <GradientStop Color="{StaticResource Button}" Offset="1"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Grid>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource OnUnchecking}" x:Name="OnUnchecking_BeginStoryboard"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource OnChecking}" x:Name="OnChecking_BeginStoryboard"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Option Grid-->
    <Style x:Key="OptionViewMainGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="MinWidth" Value="300"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <Style x:Key="OptionGroupBox"
           TargetType="{x:Type GroupBox}">
        <Setter Property="Margin" Value="3,7"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="BorderBrush" Value="{StaticResource MainTopBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="{StaticResource MainTopBrush}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="15"/>
    </Style>

    <Style x:Key="OptionColumnHeader"
           TargetType="{x:Type TextBlock}">
        <Setter Property="MinWidth" Value="75"/>
        <Setter Property="Margin" Value="10,8"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>
    <Style x:Key="OptionColumnValue"
           TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="3,7,3,4"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="OptionColumnValue2"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="3,5,3,5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="OptionComboBoxValue"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style x:Key="OptionColumnButton"
           TargetType="{x:Type Button}">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <ControlTemplate x:Key="OptionColumnButtonTemplate"
                     TargetType="{x:Type Button}" >
        <Border 
            x:Name="Border"  
            CornerRadius="3" 
            BorderThickness="0"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter
                Margin="12,0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonOverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="Gray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Rule Window: Main-->
    <Style x:Key="RuleWindowMainGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style x:Key="RuleCommonButtonStackPanel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="RuleWindowTopBorder"
           TargetType="{x:Type Border}">
        <Setter Property="Width" Value="750"/>
        <Setter Property="Height" Value="570"/>
        <Setter Property="Margin" Value="7"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="BorderBrush" Value="{StaticResource LabelActiveBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>
    <Style x:Key="RuleWindowListDataGrid"
           TargetType="{x:Type DataGrid}">
        <Setter Property="Width" Value="310"/>
        <Setter Property="Height" Value="485"/>
        <Setter Property="Margin" Value="7,13,7,7"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
    </Style>

    <Style x:Key="RuleWindowContentControl"
           TargetType="{x:Type ContentControl}">
        <Setter Property="Width" Value="415"/>
    </Style>

    <Style  x:Key="RuleWindowButton"
            TargetType="{x:Type Button}" >
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="130"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="Foreground" Value="White"/>

        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    <!--#endregion-->

    <!--#region Rule Window: Content-->
    <Style x:Key="RuleWinColumnHeader"
           TargetType="{x:Type TextBlock}">
        <Setter Property="MinWidth" Value="50"/>
        <Setter Property="Margin" Value="10,8"/>
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13.5"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>
    <Style x:Key="RuleWinColumnValueTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="3,7,3,4"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>
    <Style x:Key="RuleWinColumnValueComboBox"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="2,6,2,1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style x:Key="RuleSampleButton"
           TargetType="{x:Type Button}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="Margin" Value="1,2,1,0"/>
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>
    <ControlTemplate x:Key="RuleSampleButtonTemplate"
                     TargetType="{x:Type Button}" >
        <Border 
            x:Name="Border"  
            CornerRadius="3" 
            BorderThickness="0"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}">
            <ContentPresenter
                Margin="0"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                RecognizesAccessKey="True"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonBrush}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonOverBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonPressedBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource ButtonDisabledBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Print Window: Main-->
    <Style x:Key="PrintWindowMainGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <Style x:Key="PrintWindowMainBorder"
           TargetType="{x:Type Border}">
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="BorderBrush" Value="{StaticResource LabelActiveBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="5"/>
    </Style>

    <Style x:Key="PrintLabelGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="10,10,10,3"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    <Style x:Key="PrintLabelOuterBorder"
           TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LabelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="8"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="Background" Value="{StaticResource LabelActiveBrush}"/>
    </Style>
    <Style x:Key="PrintLabelInnerBorder"
           TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LabelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style x:Key="PrintRuleListBorder"
           TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource LabelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{StaticResource LabelActiveBrush}"/>
    </Style>
    <Style x:Key="PrintRuleScrollViewer"
           TargetType="{x:Type ScrollViewer}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style x:Key="PrintWindowGroupBox"
           TargetType="{x:Type GroupBox}">
        <Setter Property="Padding" Value="5,4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{StaticResource LabelBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontSize" Value="16"/>
    </Style>

    <Style x:Key="PrintColumnHeader"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>
    <Style x:Key="PrintColumnHeaderCheckBox"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="PrintColumnValue"
           TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="3,7,3,4"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="TextAlignment" Value="Center"/>
    </Style>

    <Style x:Key="PrintComboBoxValue"
           TargetType="{x:Type ComboBox}">
        <Setter Property="Margin" Value="3,3,3,1"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>

    <Style x:Key="PrintBottomStackPannel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
    </Style>

    <Style  x:Key="PrintButton"
            TargetType="{x:Type Button}" >
        <Setter Property="Background" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBrush}"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="Width" Value="110"/>
        <Setter Property="Margin" Value="5,10,5,0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="13"/>
    </Style>
    <!--#endregion-->

    <!--#region Print Window: Rule-->
    <Style x:Key="PrintRuleMainBorder"
           TargetType="{x:Type Border}">
        <Setter Property="Width" Value="410"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Background" Value="{StaticResource MainTopBrush}"/>
        <Setter Property="CornerRadius" Value="3"/>
    </Style>

    <Color x:Key="PrintRuleValue">#0088C7</Color>
    <SolidColorBrush x:Key="PrintRuleValueBrush" Color="{StaticResource PrintRuleValue}" />
    <Style x:Key="PrintRuleHeaderStackPanel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,0,0,3"/>
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
    </Style>
    <Style x:Key="PrintRuleHeaderLabel"
           TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="PrintRuleContentGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="White"/>
    </Style>

    <Style x:Key="PrintRuleContentStackPanel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="10,0,10,5"/>
        <Setter Property="Orientation" Value="Vertical"/>
        <Setter Property="TextElement.FontSize" Value="13"/>
    </Style>

    <Style x:Key="PrintRuleRowStackPanel"
           TargetType="{x:Type StackPanel}">
        <Setter Property="Margin" Value="0,8,0,0"/>
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <Style x:Key="PrintRuleRowHeaderTextBlock"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,0,10,0"/>
    </Style>
    <Style x:Key="PrintRuleRowValueTextBlock"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource PrintRuleValueBrush}"/>
    </Style>
    <Style x:Key="PrintRuleRowValueHighlightedTextBlock"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,3,0,0"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="PrintRuleRowGrid"
           TargetType="{x:Type Grid}">
        <Setter Property="Margin" Value="0,6,0,0"/>
    </Style>

    <Style x:Key="PrintRuleRowGridCheckBox"
           TargetType="{x:Type CheckBox}">
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="PrintRuleRowGridHeaderTextBlock"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,2,0,3"/>
        <Setter Property="Padding" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextAlignment" Value="Right"/>
    </Style>
    <Style x:Key="PrintRuleRowGridValueTextBlock"
           TargetType="{x:Type TextBlock}">
        <Setter Property="Margin" Value="0,2,0,3"/>
        <Setter Property="Padding" Value="0,0,10,0"/>
        <Setter Property="Foreground" Value="{StaticResource PrintRuleValueBrush}"/>
    </Style>
    <Style x:Key="PrintRuleRowGridValueTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Margin" Value="2,3,2,2"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{StaticResource PrintRuleValueBrush}"/>
    </Style>
    <Style x:Key="PrintRuleRowGridValueHighlightedTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="Margin" Value="2,3,2,2"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="Red"/>
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>
    <!--#endregion-->

</ResourceDictionary>